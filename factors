#!/usr/bin/python3

""" Factorize digits into an outcome of two smaller digits """
import sys


PRIMES = [
        2, 3, 5, 7, 11, 13, 17, 19, 23, 29,
        31, 37 ]

def least_prime(n):
    """Find the smallest prime factor of n"""
    for prime in PRIMES:
        if n % prime == 0:
            return prime
        if prime * prime > n:
            return n
    return n

def factorize(digit):
    """Factorize a digit into two smaller digits"""
    if digit <= 1:
        return digit, 1

    elem = least_prime(digit)
    if elem == digit:
        return digit, 1

    fac = digit // elem
    return fac, elem

def factorize_file(path):
    """Factorize digits in the provided file into two smaller digits"""
    try:
        with open(path) as f:
            for line in f:
                number = int(line.strip())
                elem2, elem1 = factorize(number)
                print(f"{number}={elem2}*{elem1}")
    except FileNotFoundError:
        print(f"File '{path}' not found.")
    except ValueError:
        print("Invalid data in the file.")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        sys.exit(f"Usage: {sys.argv[0]} <path>")

    factors = sys.argv[1]
    factorize_file(factors)

