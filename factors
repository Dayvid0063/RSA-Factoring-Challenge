#!/usr/bin/python3

""" Factorize digits into an outcome of two smaller digits """
import sys
import math


def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def p_rho(n):
    if n % 2 == 0:
        return 2

    x = 2
    y = 2
    d = 1

    f = lambda x: (x**2 + 1) % n

    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)

    return d

def factorize(digit):
    if digit <= 1:
        return digit, 1

    elem = p_rho(digit)
    if elem == digit:
        return digit, 1

    fac = digit // elem
    return fac, elem

def factorize_file(path):
    try:
        with open(path) as f:
            for line in f:
                number = int(line.strip())
                elem2, elem1 = factorize(number)
                print(f"{number}={elem2}*{elem1}")
    except FileNotFoundError:
        print(f"File '{path}' not found.")
    except ValueError:
        print("Invalid data in the file.")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        sys.exit(f"Usage: {sys.argv[0]} <path>")

    factors = sys.argv[1]
    factorize_file(factors)
