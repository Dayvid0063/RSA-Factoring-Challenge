#!/usr/bin/python3

import sys
import time
import random
import math

def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(math.sqrt(n)) + 1):
        if n % i == 0:
            return False
    return True

def pollard_rho(n):
    if n % 2 == 0:
        return 2

    x = random.randint(1, n - 1)
    y = x
    c = random.randint(1, n - 1)
    d = 1

    while d == 1:
        x = (x * x + c) % n
        y = (y * y + c) % n
        y = (y * y + c) % n
        d = math.gcd(abs(x - y), n)

    return d

def find_prime_factors(n):
    if n < 2:
        return None, None

    if is_prime(n):
        return n, 1

    d = pollard_rho(n)
    if d == n:
        return None, None

    return d, n // d

def factorize_file(path):
    try:
        with open(path) as f:
            for line in f:
                n = int(line.strip())
                p, q = find_prime_factors(n)
                if p is not None and q is not None:
                    print(f"{n}={p}*{q}")
                else:
                    print(f"Prime factors for {n} not found.")

                if time.time() - start_time > 5:
                    print("Execution time exceeded the limit.")
                    break
    except FileNotFoundError:
        print(f"File '{path}' not found.")
    except ValueError:
        print("Invalid data in the file.")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        sys.exit(f"Usage: {sys.argv[0]} <path>")

    factors = sys.argv[1]

    start_time = time.time()
    factorize_file(factors)
