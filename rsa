#!/usr/bin/python3

import sys
import time
import math
import random


def gcd(a, b):
    """solve the largest divisor of a and b"""
    while b:
        a, b = b, a % b
    return a


def pollard_rho(n):
    """Pollard's rho algorithm for factorizing a number"""
    if n % 2 == 0:
        return 2, n // 2

    x = random.randint(1, n - 1)
    y = x
    c = random.randint(1, n - 1)
    d = 1

    def f(val):
        return (val * val + c) % n

    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)

    return d, n // d


def factorize_file(path):
    """Factorizes digits in the provided file into two prime factors"""
    try:
        with open(path) as f:
            for line in f:
                n = int(line.strip())
                p, q = pollard_rho(n)
                if p is not None and q is not None:
                    print(f"{n}={p}*{q}")
                else:
                    print(f"Couldn't find two prime factors for {n}")

                if time.time() - start_time > 5:
                    print("Execution time exceeded the limit.")
                    break
    except FileNotFoundError:
        print(f"File '{path}' not found.")
    except ValueError:
        print("Invalid data in the file.")


if __name__ == "__main__":
    if len(sys.argv) != 2:
        sys.exit(f"Usage: {sys.argv[0]} <path>")

    factors = sys.argv[1]

    start_time = time.time()

    factorize_file(factors)
